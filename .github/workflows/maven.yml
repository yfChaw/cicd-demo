# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run Test with Maven
        # run: mvn -B test
        run: cd /home/runner/work/cicd-demo/cicd-demo/d13 && mvn -B package --file pom.xml

  sonar:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze on SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: cd /home/runner/work/cicd-demo/cicd-demo/d13 && mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=yfChaw_cicd-demo
        # run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=yfchaw_cicd-demo

  snyk:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: debug
        run: cd d13 && ls -lah && chmod +x ./mvnw

      - name: snyk setup
        uses: snyk/actions/setup@master

      - name: snyk test
        run: cd /home/runner/work/cicd-demo/cicd-demo/d13 && SNYK_TOKEN=${{ secrets.SNYK_TOKEN }} snyk test --continue-on-error=true --sarif-file-output=snyk.sarif
                                                                                                            # --severity-threshold=low|medium|high|critical
        # env:
        #   SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          # https://docs.snyk.io/snyk-cli/commands/auth
          # https://docs.snyk.io/snyk-cli/authenticate-the-cli-with-your-account

# have to do the above manual setup as the path spoilt. 

      # - name: Run snyk to check for vulnerabilities
      #   uses: snyk/actions/maven@master
      #   # working-directory: /home/runner/work/cicd-demo/cicd-demo/d13
      #   continue-on-error: True # To make sure that SARIF upload gets called
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      #   with:
      #     # args: --file=d13/pom.xml --sarif-file-output=snyk.sarif
      #     command: test
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        # working-directory: /home/runner/work/cicd-demo/cicd-demo/d13
        with:
          sarif_file: snyk.sarif


############### without sonar cloud
# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up JDK 17
#       uses: actions/setup-java@v3
#       with:
#         java-version: '17'
#         distribution: 'temurin'
#         cache: maven
#     - name: Build with Maven
#       run: cd /home/runner/work/cicd-demo/cicd-demo/d13 && mvn -B package --file pom.xml
      # run: ls # /home/runner/work/cicd-demo/cicd-demo

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # - name: Update dependency graph
    #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
